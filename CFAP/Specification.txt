Пользовательский интерфейс должен содержать:
1. Страницу с данными в разрезе периодов, признаков "Приход"/"Расход", проектов, расшифровок, статей, подотчетников, сумм в грн. и $
	1.1 Кнопка "Настройки" включает возможность задания предварительных фильтров для получения данных
	1.2 Кнопка "Проверка" должна осущесвить валидацию внесенных данных
	1.3 Кнопка "Сохранить" отправляет данные на сервер с предварительной валидацией
	1.4 Кнопка "Получить данные" - загружает данные с БД с учетом предварительных фильтров
	1.5 Кнопка "Добавить" позволяет добавлять новые данные посредством формы без необходимости предварительной загрузки данных с БД
	1.6 Кнопка "Изменить" позволяет изменить строку с выделенной ячейкой данных посредством формы. Неактивна без выделенной ячейки
	1.7 Данные отображаються в виде таблицы с возможностью фильтрации
		1.7.1 В случае ошибок валидации - ячейки с ошибками выделяються красным
	1.8 При выделении диапазона, который содержит не числовые данные внизу страницы должно появиться поле "Количество", если данные числовые - "Количество" и "Сумма"
	1.9 Каждый пользователь должен видеть только связанные с ним данные

2. Страницу со списком проектов с учетом требований пункта 1.9. Данные загружаються при запуске.
	2.1 Кнопка "Применить" отправляет измененные данные сервер с предварительной валидацией. В случае ошибок валидации - пункт 1.7.1. Не активна в случае отстствия изменений.
	2.2 Данные отображаються с учетом требований понкта 1.9

3. Страницу "Подотчетники" в разрезе подотчетников, остатков на начало периода, приходов, расходов, остатков на конец периода. 
	3.1 Содержить фильтр "Период"
	3.2 Кнопка "Получить данные" загружает данные с сревера. Все данные агрегируються за выбраный период или за все время, если период не выбран
	3.3 Кнопка "Новый подотчетник" позволяет добавить в БД нового подотчетника с возможностью указания пользователей-владельцев
	3.4 Данные отображаються с учетом требований понкта 1.9

4. Страницу "Combine balance" которая отображатеться только пользователям с признаком "Админ" и содержит агрегированные данные по всем проетам в разрезе приходо и расходов в $

События бизнес-логики стороны клиента:
1. Валидация
	1.1 Вызывает службу для проверки валидности данных
		1.1.1 Отправляет данные об аутентифированном пользователе, которые содержит ассоциации данных для валидации
		1.1.2 Получает булево выражение "Истина" или экземпляр сбоя с указанием всех ошибок валидации во внутренне исключении
2. Применение изменений
	2.1 Вызывает события пункта 1
	2.2 Отправляет данные об аутентифированном пользователе, которые содержит ассоциации изменения данных. Вызов осуществляется посредством транзакции
	2.3 Получает void или сбой
		2.3.1 В случае сбоя - создает экземпляр класса обработчика сбоев передавая ему исключение сбоя
3. Сбой сохранения данных формирует список: данные в памяти, данные в БД, кто изменил, новые данные и выдает форму с вопросом изменить ли данные в БД, в памяти или отменить изменения
	3.1 В случае подтвреждения изменений вызываеться события пунктов 4. 5 соответсвенно
	3.2 В случае отмены изменений данные перезаписываються данными с БД
4. Применение изменений с перезаписью данных в БД
	4.1 Пункт 2.1
	4.2 Пункт 2.2 с учетом передачи параметра перечисления изменений в БД
	4.3 Получает void
5. Применение изменений с перезаписью данных в памяти
	4.1 Пункт 2.1
	4.2 Пункт 2.2 с учетом передачи параметра перечисления изменений в памяти
		4.3 Получает void
6. Получение данных
	6.1 Получает данные с учетом предварительных фильтров. Фильтры передаються в экземпляре отдельного класса
7. Загрузка первоначальных данных
8. Аутентификация пользователя

Классы бизнес-логики стороны клиента
1. Обработчик сбоев
	1.1 Получает экземпляр исключения. Вызывает события исходя из типа исключения
	1.2 Содержит события для каждого типа исключения.
		1.2.1 Сбой сохранения принимает экземпляр исключения 
			1.2.1.1 Подписка на событие осуществляеться с UI (отображает данные данные в памяти, данные в БД, кто изменил, новые данные и выдает форму с вопросом изменить ли данные в БД, в памяти или отменить изменения)
			1.2.1.2 В случае подтвреждения изменений вызываеться события пунктов 4, 5 раздела  "События бизнес-логики стороны клиента" соответсвенно
			1.2.1.3 В случае отмены изменений данные перезаписываються данными с БД
		1.2.2 Сбой аутентификации
		1.2.3 Сбой соединения с БД
		1.2.4 Сбой валидации данных

Сервис взаимодействия с БД
1. Метод аутентификации. Принимает экземпляр пользователя и, в случае успеха, возвращает его или возвращает сбой аутентифифкации
2. Метод загрузки данных. Принимает экземпляры пользователя и филтра. Возвращает экземпляр пользователя дополненный необходимыми данными.
3. Метод загрузки первоначальных данных. Принимает экземпляр пользователя и возвращает его дополненный первоначальными данными
4. Метод применения изменений. Принимает экземпляр пользователя и записывает данные в БД. Возвращает void или сбой.
5. Метод валидации данных. Принимает экземпляр пользователя и проводит валидацию данных. Возвращает либо "Истина" либо сбой.

	
	
	

			