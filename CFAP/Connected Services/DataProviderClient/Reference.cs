//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CFAP.DataProviderClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class DbException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Accountable AccountableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanChangeUsersDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAccountableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.UserGroup[] UserGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Accountable Accountable {
            get {
                return this.AccountableField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountableField, value) != true)) {
                    this.AccountableField = value;
                    this.RaisePropertyChanged("Accountable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanChangeUsersData {
            get {
                return this.CanChangeUsersDataField;
            }
            set {
                if ((this.CanChangeUsersDataField.Equals(value) != true)) {
                    this.CanChangeUsersDataField = value;
                    this.RaisePropertyChanged("CanChangeUsersData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccountable {
            get {
                return this.IsAccountableField;
            }
            set {
                if ((this.IsAccountableField.Equals(value) != true)) {
                    this.IsAccountableField = value;
                    this.RaisePropertyChanged("IsAccountable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.UserGroup[] UserGroups {
            get {
                return this.UserGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserGroupsField, value) != true)) {
                    this.UserGroupsField = value;
                    this.RaisePropertyChanged("UserGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Accountable", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models")]
    [System.SerializableAttribute()]
    public partial class Accountable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] RowVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountableName {
            get {
                return this.AccountableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountableNameField, value) != true)) {
                    this.AccountableNameField = value;
                    this.RaisePropertyChanged("AccountableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadOnly {
            get {
                return this.ReadOnlyField;
            }
            set {
                if ((this.ReadOnlyField.Equals(value) != true)) {
                    this.ReadOnlyField = value;
                    this.RaisePropertyChanged("ReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserGroup", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models")]
    [System.SerializableAttribute()]
    public partial class UserGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanReadAccountablesSummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanReadAccountablesSummary {
            get {
                return this.CanReadAccountablesSummaryField;
            }
            set {
                if ((this.CanReadAccountablesSummaryField.Equals(value) != true)) {
                    this.CanReadAccountablesSummaryField = value;
                    this.RaisePropertyChanged("CanReadAccountablesSummary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class AuthenticateFaultException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class NoRightsToChangeDataException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class DataNotValidException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> ValidationErrorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> ValidationErrors {
            get {
                return this.ValidationErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationErrorsField, value) != true)) {
                    this.ValidationErrorsField = value;
                    this.RaisePropertyChanged("ValidationErrors");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserHasNotGroupsException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class UserHasNotGroupsException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountableUserHasNotAccountableRefferenceException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class AccountableUserHasNotAccountableRefferenceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Summary", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models")]
    [System.SerializableAttribute()]
    public partial class Summary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Accountable AccountableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.BudgetItem BudgetItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CashFlowTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentEuroToDollarRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentRateUSDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Project ProjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] RowVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SummaEuroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SummaUAHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SummaUSDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SummaryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalSummaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.User UserLastChangedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Accountable Accountable {
            get {
                return this.AccountableField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountableField, value) != true)) {
                    this.AccountableField = value;
                    this.RaisePropertyChanged("Accountable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActionDate {
            get {
                return this.ActionDateField;
            }
            set {
                if ((this.ActionDateField.Equals(value) != true)) {
                    this.ActionDateField = value;
                    this.RaisePropertyChanged("ActionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.BudgetItem BudgetItem {
            get {
                return this.BudgetItemField;
            }
            set {
                if ((object.ReferenceEquals(this.BudgetItemField, value) != true)) {
                    this.BudgetItemField = value;
                    this.RaisePropertyChanged("BudgetItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CashFlowType {
            get {
                return this.CashFlowTypeField;
            }
            set {
                if ((this.CashFlowTypeField.Equals(value) != true)) {
                    this.CashFlowTypeField = value;
                    this.RaisePropertyChanged("CashFlowType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentEuroToDollarRate {
            get {
                return this.CurrentEuroToDollarRateField;
            }
            set {
                if ((this.CurrentEuroToDollarRateField.Equals(value) != true)) {
                    this.CurrentEuroToDollarRateField = value;
                    this.RaisePropertyChanged("CurrentEuroToDollarRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentRateUSD {
            get {
                return this.CurrentRateUSDField;
            }
            set {
                if ((this.CurrentRateUSDField.Equals(value) != true)) {
                    this.CurrentRateUSDField = value;
                    this.RaisePropertyChanged("CurrentRateUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Project Project {
            get {
                return this.ProjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectField, value) != true)) {
                    this.ProjectField = value;
                    this.RaisePropertyChanged("Project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadOnly {
            get {
                return this.ReadOnlyField;
            }
            set {
                if ((this.ReadOnlyField.Equals(value) != true)) {
                    this.ReadOnlyField = value;
                    this.RaisePropertyChanged("ReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SummaEuro {
            get {
                return this.SummaEuroField;
            }
            set {
                if ((this.SummaEuroField.Equals(value) != true)) {
                    this.SummaEuroField = value;
                    this.RaisePropertyChanged("SummaEuro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SummaUAH {
            get {
                return this.SummaUAHField;
            }
            set {
                if ((this.SummaUAHField.Equals(value) != true)) {
                    this.SummaUAHField = value;
                    this.RaisePropertyChanged("SummaUAH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SummaUSD {
            get {
                return this.SummaUSDField;
            }
            set {
                if ((this.SummaUSDField.Equals(value) != true)) {
                    this.SummaUSDField = value;
                    this.RaisePropertyChanged("SummaUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SummaryDate {
            get {
                return this.SummaryDateField;
            }
            set {
                if ((this.SummaryDateField.Equals(value) != true)) {
                    this.SummaryDateField = value;
                    this.RaisePropertyChanged("SummaryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalSumma {
            get {
                return this.TotalSummaField;
            }
            set {
                if ((this.TotalSummaField.Equals(value) != true)) {
                    this.TotalSummaField = value;
                    this.RaisePropertyChanged("TotalSumma");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.User UserLastChanged {
            get {
                return this.UserLastChangedField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLastChangedField, value) != true)) {
                    this.UserLastChangedField = value;
                    this.RaisePropertyChanged("UserLastChanged");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BudgetItem", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models")]
    [System.SerializableAttribute()]
    public partial class BudgetItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] RowVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadOnly {
            get {
                return this.ReadOnlyField;
            }
            set {
                if ((this.ReadOnlyField.Equals(value) != true)) {
                    this.ReadOnlyField = value;
                    this.RaisePropertyChanged("ReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models")]
    [System.SerializableAttribute()]
    public partial class Project : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] RowVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadOnly {
            get {
                return this.ReadOnlyField;
            }
            set {
                if ((this.ReadOnlyField.Equals(value) != true)) {
                    this.ReadOnlyField = value;
                    this.RaisePropertyChanged("ReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeriodIsLockedException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class PeriodIsLockedException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Filter", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel")]
    [System.SerializableAttribute()]
    public partial class Filter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Accountable[] AccountablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.BudgetItem[] BudgetItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Project[] ProjectsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Accountable[] Accountables {
            get {
                return this.AccountablesField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountablesField, value) != true)) {
                    this.AccountablesField = value;
                    this.RaisePropertyChanged("Accountables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.BudgetItem[] BudgetItems {
            get {
                return this.BudgetItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.BudgetItemsField, value) != true)) {
                    this.BudgetItemsField = value;
                    this.RaisePropertyChanged("BudgetItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateEnd {
            get {
                return this.DateEndField;
            }
            set {
                if ((this.DateEndField.Equals(value) != true)) {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateStart {
            get {
                return this.DateStartField;
            }
            set {
                if ((this.DateStartField.Equals(value) != true)) {
                    this.DateStartField = value;
                    this.RaisePropertyChanged("DateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Project[] Projects {
            get {
                return this.ProjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectsField, value) != true)) {
                    this.ProjectsField = value;
                    this.RaisePropertyChanged("Projects");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Balance", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models")]
    [System.SerializableAttribute()]
    public partial class Balance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceUAHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceUSDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BalanceUAH {
            get {
                return this.BalanceUAHField;
            }
            set {
                if ((this.BalanceUAHField.Equals(value) != true)) {
                    this.BalanceUAHField = value;
                    this.RaisePropertyChanged("BalanceUAH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BalanceUSD {
            get {
                return this.BalanceUSDField;
            }
            set {
                if ((this.BalanceUSDField.Equals(value) != true)) {
                    this.BalanceUSDField = value;
                    this.RaisePropertyChanged("BalanceUSD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DbConcurencyUpdateOptions", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel")]
    public enum DbConcurencyUpdateOptions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClientPriority = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabasePriority = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TryChangeReadOnlyFiledException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class TryChangeReadOnlyFiledException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldId {
            get {
                return this.FieldIdField;
            }
            set {
                if ((this.FieldIdField.Equals(value) != true)) {
                    this.FieldIdField = value;
                    this.RaisePropertyChanged("FieldId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FiledDeletedException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class FiledDeletedException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConcurrencyExceptionOfSummarydxjYbbDT", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class ConcurrencyExceptionOfSummarydxjYbbDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Summary CurrentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Summary DatabaseValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Summary CurrentValue {
            get {
                return this.CurrentValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentValueField, value) != true)) {
                    this.CurrentValueField = value;
                    this.RaisePropertyChanged("CurrentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Summary DatabaseValue {
            get {
                return this.DatabaseValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseValueField, value) != true)) {
                    this.DatabaseValueField = value;
                    this.RaisePropertyChanged("DatabaseValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConcurrencyExceptionOfAccountabledxjYbbDT", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class ConcurrencyExceptionOfAccountabledxjYbbDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Accountable CurrentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Accountable DatabaseValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Accountable CurrentValue {
            get {
                return this.CurrentValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentValueField, value) != true)) {
                    this.CurrentValueField = value;
                    this.RaisePropertyChanged("CurrentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Accountable DatabaseValue {
            get {
                return this.DatabaseValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseValueField, value) != true)) {
                    this.DatabaseValueField = value;
                    this.RaisePropertyChanged("DatabaseValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConcurrencyExceptionOfProjectdxjYbbDT", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class ConcurrencyExceptionOfProjectdxjYbbDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Project CurrentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Project DatabaseValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Project CurrentValue {
            get {
                return this.CurrentValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentValueField, value) != true)) {
                    this.CurrentValueField = value;
                    this.RaisePropertyChanged("CurrentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Project DatabaseValue {
            get {
                return this.DatabaseValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseValueField, value) != true)) {
                    this.DatabaseValueField = value;
                    this.RaisePropertyChanged("DatabaseValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConcurrencyExceptionOfBudgetItemdxjYbbDT", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class ConcurrencyExceptionOfBudgetItemdxjYbbDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.BudgetItem CurrentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.BudgetItem DatabaseValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.BudgetItem CurrentValue {
            get {
                return this.CurrentValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentValueField, value) != true)) {
                    this.CurrentValueField = value;
                    this.RaisePropertyChanged("CurrentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.BudgetItem DatabaseValue {
            get {
                return this.DatabaseValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseValueField, value) != true)) {
                    this.DatabaseValueField = value;
                    this.RaisePropertyChanged("DatabaseValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rate", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models")]
    [System.SerializableAttribute()]
    public partial class Rate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EuroToDollarRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateUSDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] RowVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateRate {
            get {
                return this.DateRateField;
            }
            set {
                if ((this.DateRateField.Equals(value) != true)) {
                    this.DateRateField = value;
                    this.RaisePropertyChanged("DateRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EuroToDollarRate {
            get {
                return this.EuroToDollarRateField;
            }
            set {
                if ((this.EuroToDollarRateField.Equals(value) != true)) {
                    this.EuroToDollarRateField = value;
                    this.RaisePropertyChanged("EuroToDollarRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RateUSD {
            get {
                return this.RateUSDField;
            }
            set {
                if ((this.RateUSDField.Equals(value) != true)) {
                    this.RateUSDField = value;
                    this.RaisePropertyChanged("RateUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadOnly {
            get {
                return this.ReadOnlyField;
            }
            set {
                if ((this.ReadOnlyField.Equals(value) != true)) {
                    this.ReadOnlyField = value;
                    this.RaisePropertyChanged("ReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConcurrencyExceptionOfRatedxjYbbDT", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
    [System.SerializableAttribute()]
    public partial class ConcurrencyExceptionOfRatedxjYbbDT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Rate CurrentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CFAP.DataProviderClient.Rate DatabaseValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Rate CurrentValue {
            get {
                return this.CurrentValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentValueField, value) != true)) {
                    this.CurrentValueField = value;
                    this.RaisePropertyChanged("CurrentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CFAP.DataProviderClient.Rate DatabaseValue {
            get {
                return this.DatabaseValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseValueField, value) != true)) {
                    this.DatabaseValueField = value;
                    this.RaisePropertyChanged("DatabaseValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transport", Namespace="http://schemas.datacontract.org/2004/07/CFAPService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.Filter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.DbConcurencyUpdateOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.CrudOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.ArgumentNullException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.ArgumentException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.SystemException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Exception))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.InvalidOperationException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.Accountable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.UserGroup[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.UserGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.User[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.Summary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.BudgetItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.Project))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.Accountable[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.BudgetItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.Project[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.Summary[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.Balance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.Rate[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.Rate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.Period))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.DbException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.DataNotValidException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.UserHasNotGroupsException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.AccountableUserHasNotAccountableRefferenceException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.PeriodIsLockedException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.TryChangeReadOnlyFiledException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.FiledDeletedException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfSummarydxjYbbDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfAccountabledxjYbbDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfProjectdxjYbbDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfBudgetItemdxjYbbDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfRatedxjYbbDT))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    public partial class Transport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] CollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object SingleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Single {
            get {
                return this.SingleField;
            }
            set {
                if ((object.ReferenceEquals(this.SingleField, value) != true)) {
                    this.SingleField = value;
                    this.RaisePropertyChanged("Single");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrudOperation", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel")]
    public enum CrudOperation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Select = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Add = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Period", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models")]
    [System.SerializableAttribute()]
    public partial class Period : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLocked {
            get {
                return this.IsLockedField;
            }
            set {
                if ((this.IsLockedField.Equals(value) != true)) {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Month {
            get {
                return this.MonthField;
            }
            set {
                if ((this.MonthField.Equals(value) != true)) {
                    this.MonthField = value;
                    this.RaisePropertyChanged("Month");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataProviderClient.IDataProvider")]
    public interface IDataProvider {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetLogins", ReplyAction="http://tempuri.org/IDataProvider/GetLoginsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/GetLoginsDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        string[] GetLogins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetLogins", ReplyAction="http://tempuri.org/IDataProvider/GetLoginsResponse")]
        System.Threading.Tasks.Task<string[]> GetLoginsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/Authenticate", ReplyAction="http://tempuri.org/IDataProvider/AuthenticateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/AuthenticateAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/AuthenticateDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IDataProvider/AuthenticateArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        CFAP.DataProviderClient.User Authenticate(CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/Authenticate", ReplyAction="http://tempuri.org/IDataProvider/AuthenticateResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.User> AuthenticateAsync(CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddNewUser", ReplyAction="http://tempuri.org/IDataProvider/AddNewUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/AddNewUserAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/AddNewUserDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/AddNewUserNoRightsToChangeDataExceptionFault", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/AddNewUserDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.UserHasNotGroupsException), Action="http://tempuri.org/IDataProvider/AddNewUserUserHasNotGroupsExceptionFault", Name="UserHasNotGroupsException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AccountableUserHasNotAccountableRefferenceException), Action="http://tempuri.org/IDataProvider/AddNewUserAccountableUserHasNotAccountableReffer" +
            "enceExceptionFault", Name="AccountableUserHasNotAccountableRefferenceException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.User AddNewUser(CFAP.DataProviderClient.User newUser, CFAP.DataProviderClient.User owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddNewUser", ReplyAction="http://tempuri.org/IDataProvider/AddNewUserResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.User> AddNewUserAsync(CFAP.DataProviderClient.User newUser, CFAP.DataProviderClient.User owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetUsers", ReplyAction="http://tempuri.org/IDataProvider/GetUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/GetUsersAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/GetUsersDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/GetUsersNoRightsToChangeDataExceptionFault", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        CFAP.DataProviderClient.User[] GetUsers(CFAP.DataProviderClient.User owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetUsers", ReplyAction="http://tempuri.org/IDataProvider/GetUsersResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.User[]> GetUsersAsync(CFAP.DataProviderClient.User owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateUser", ReplyAction="http://tempuri.org/IDataProvider/UpdateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/UpdateUserAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/UpdateUserDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/UpdateUserNoRightsToChangeDataExceptionFault", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/UpdateUserDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.UserHasNotGroupsException), Action="http://tempuri.org/IDataProvider/UpdateUserUserHasNotGroupsExceptionFault", Name="UserHasNotGroupsException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AccountableUserHasNotAccountableRefferenceException), Action="http://tempuri.org/IDataProvider/UpdateUserAccountableUserHasNotAccountableReffer" +
            "enceExceptionFault", Name="AccountableUserHasNotAccountableRefferenceException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.User UpdateUser(CFAP.DataProviderClient.User userForUpdate, CFAP.DataProviderClient.User owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateUser", ReplyAction="http://tempuri.org/IDataProvider/UpdateUserResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.User> UpdateUserAsync(CFAP.DataProviderClient.User userForUpdate, CFAP.DataProviderClient.User owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetUserGroups", ReplyAction="http://tempuri.org/IDataProvider/GetUserGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/GetUserGroupsAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/GetUserGroupsDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/GetUserGroupsNoRightsToChangeDataExceptionFault", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        CFAP.DataProviderClient.UserGroup[] GetUserGroups(CFAP.DataProviderClient.User owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetUserGroups", ReplyAction="http://tempuri.org/IDataProvider/GetUserGroupsResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.UserGroup[]> GetUserGroupsAsync(CFAP.DataProviderClient.User owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddNewUserGroup", ReplyAction="http://tempuri.org/IDataProvider/AddNewUserGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/AddNewUserGroupAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/AddNewUserGroupDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/AddNewUserGroupNoRightsToChangeDataExceptionFaul" +
            "t", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/AddNewUserGroupDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.UserGroup AddNewUserGroup(CFAP.DataProviderClient.UserGroup newUserGroup, CFAP.DataProviderClient.User owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddNewUserGroup", ReplyAction="http://tempuri.org/IDataProvider/AddNewUserGroupResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.UserGroup> AddNewUserGroupAsync(CFAP.DataProviderClient.UserGroup newUserGroup, CFAP.DataProviderClient.User owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateUserGroup", ReplyAction="http://tempuri.org/IDataProvider/UpdateUserGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/UpdateUserGroupAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/UpdateUserGroupDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/UpdateUserGroupNoRightsToChangeDataExceptionFaul" +
            "t", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/UpdateUserGroupDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.UserGroup UpdateUserGroup(CFAP.DataProviderClient.UserGroup userGroupForUpdate, CFAP.DataProviderClient.User owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateUserGroup", ReplyAction="http://tempuri.org/IDataProvider/UpdateUserGroupResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.UserGroup> UpdateUserGroupAsync(CFAP.DataProviderClient.UserGroup userGroupForUpdate, CFAP.DataProviderClient.User owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddSummary", ReplyAction="http://tempuri.org/IDataProvider/AddSummaryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/AddSummaryAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/AddSummaryDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/AddSummaryDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.PeriodIsLockedException), Action="http://tempuri.org/IDataProvider/AddSummaryPeriodIsLockedExceptionFault", Name="PeriodIsLockedException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.Summary AddSummary(CFAP.DataProviderClient.Summary summary, CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddSummary", ReplyAction="http://tempuri.org/IDataProvider/AddSummaryResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Summary> AddSummaryAsync(CFAP.DataProviderClient.Summary summary, CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetSummary", ReplyAction="http://tempuri.org/IDataProvider/GetSummaryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/GetSummaryAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/GetSummaryDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        CFAP.DataProviderClient.Summary[] GetSummary(CFAP.DataProviderClient.User user, CFAP.DataProviderClient.Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetSummary", ReplyAction="http://tempuri.org/IDataProvider/GetSummaryResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Summary[]> GetSummaryAsync(CFAP.DataProviderClient.User user, CFAP.DataProviderClient.Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetBalanceBeginningPeriod", ReplyAction="http://tempuri.org/IDataProvider/GetBalanceBeginningPeriodResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/GetBalanceBeginningPeriodAuthenticateFaultExcept" +
            "ionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/GetBalanceBeginningPeriodDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        CFAP.DataProviderClient.Balance GetBalanceBeginningPeriod(CFAP.DataProviderClient.User user, CFAP.DataProviderClient.Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetBalanceBeginningPeriod", ReplyAction="http://tempuri.org/IDataProvider/GetBalanceBeginningPeriodResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Balance> GetBalanceBeginningPeriodAsync(CFAP.DataProviderClient.User user, CFAP.DataProviderClient.Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateSummary", ReplyAction="http://tempuri.org/IDataProvider/UpdateSummaryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/UpdateSummaryAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/UpdateSummaryDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/UpdateSummaryDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.TryChangeReadOnlyFiledException), Action="http://tempuri.org/IDataProvider/UpdateSummaryTryChangeReadOnlyFiledExceptionFaul" +
            "t", Name="TryChangeReadOnlyFiledException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.FiledDeletedException), Action="http://tempuri.org/IDataProvider/UpdateSummaryFiledDeletedExceptionFault", Name="FiledDeletedException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfSummarydxjYbbDT), Action="http://tempuri.org/IDataProvider/UpdateSummaryConcurrencyExceptionOf_SummaryFault" +
            "", Name="ConcurrencyExceptionOfSummarydxjYbbDT", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.PeriodIsLockedException), Action="http://tempuri.org/IDataProvider/UpdateSummaryPeriodIsLockedExceptionFault", Name="PeriodIsLockedException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.Summary UpdateSummary(CFAP.DataProviderClient.Summary summary, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateSummary", ReplyAction="http://tempuri.org/IDataProvider/UpdateSummaryResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Summary> UpdateSummaryAsync(CFAP.DataProviderClient.Summary summary, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/ChangeSummaryReadOnlyStatus", ReplyAction="http://tempuri.org/IDataProvider/ChangeSummaryReadOnlyStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/ChangeSummaryReadOnlyStatusAuthenticateFaultExce" +
            "ptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/ChangeSummaryReadOnlyStatusDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/ChangeSummaryReadOnlyStatusNoRightsToChangeDataE" +
            "xceptionFault", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        void ChangeSummaryReadOnlyStatus(bool onOff, CFAP.DataProviderClient.Filter filter, CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/ChangeSummaryReadOnlyStatus", ReplyAction="http://tempuri.org/IDataProvider/ChangeSummaryReadOnlyStatusResponse")]
        System.Threading.Tasks.Task ChangeSummaryReadOnlyStatusAsync(bool onOff, CFAP.DataProviderClient.Filter filter, CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/RemoveSummary", ReplyAction="http://tempuri.org/IDataProvider/RemoveSummaryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/RemoveSummaryAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/RemoveSummaryDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.TryChangeReadOnlyFiledException), Action="http://tempuri.org/IDataProvider/RemoveSummaryTryChangeReadOnlyFiledExceptionFaul" +
            "t", Name="TryChangeReadOnlyFiledException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfSummarydxjYbbDT), Action="http://tempuri.org/IDataProvider/RemoveSummaryConcurrencyExceptionOf_SummaryFault" +
            "", Name="ConcurrencyExceptionOfSummarydxjYbbDT", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.FiledDeletedException), Action="http://tempuri.org/IDataProvider/RemoveSummaryFiledDeletedExceptionFault", Name="FiledDeletedException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.InvalidOperationException), Action="http://tempuri.org/IDataProvider/RemoveSummaryInvalidOperationExceptionFault", Name="InvalidOperationException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.PeriodIsLockedException), Action="http://tempuri.org/IDataProvider/RemoveSummaryPeriodIsLockedExceptionFault", Name="PeriodIsLockedException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.Summary RemoveSummary(CFAP.DataProviderClient.Summary summary, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/RemoveSummary", ReplyAction="http://tempuri.org/IDataProvider/RemoveSummaryResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Summary> RemoveSummaryAsync(CFAP.DataProviderClient.Summary summary, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetAccountables", ReplyAction="http://tempuri.org/IDataProvider/GetAccountablesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/GetAccountablesAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/GetAccountablesDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        CFAP.DataProviderClient.Accountable[] GetAccountables(CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetAccountables", ReplyAction="http://tempuri.org/IDataProvider/GetAccountablesResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Accountable[]> GetAccountablesAsync(CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddAccountable", ReplyAction="http://tempuri.org/IDataProvider/AddAccountableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/AddAccountableAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/AddAccountableDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/AddAccountableDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/AddAccountableNoRightsToChangeDataExceptionFault" +
            "", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.Accountable AddAccountable(CFAP.DataProviderClient.Accountable newAccountable, CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddAccountable", ReplyAction="http://tempuri.org/IDataProvider/AddAccountableResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Accountable> AddAccountableAsync(CFAP.DataProviderClient.Accountable newAccountable, CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateAccountable", ReplyAction="http://tempuri.org/IDataProvider/UpdateAccountableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/UpdateAccountableAuthenticateFaultExceptionFault" +
            "", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/UpdateAccountableDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/UpdateAccountableDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/UpdateAccountableNoRightsToChangeDataExceptionFa" +
            "ult", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.TryChangeReadOnlyFiledException), Action="http://tempuri.org/IDataProvider/UpdateAccountableTryChangeReadOnlyFiledException" +
            "Fault", Name="TryChangeReadOnlyFiledException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfAccountabledxjYbbDT), Action="http://tempuri.org/IDataProvider/UpdateAccountableConcurrencyExceptionOf_Accounta" +
            "bleFault", Name="ConcurrencyExceptionOfAccountabledxjYbbDT", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.Accountable UpdateAccountable(CFAP.DataProviderClient.Accountable accountableToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateAccountable", ReplyAction="http://tempuri.org/IDataProvider/UpdateAccountableResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Accountable> UpdateAccountableAsync(CFAP.DataProviderClient.Accountable accountableToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetProjects", ReplyAction="http://tempuri.org/IDataProvider/GetProjectsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/GetProjectsAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/GetProjectsDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        CFAP.DataProviderClient.Project[] GetProjects(CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetProjects", ReplyAction="http://tempuri.org/IDataProvider/GetProjectsResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Project[]> GetProjectsAsync(CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddProject", ReplyAction="http://tempuri.org/IDataProvider/AddProjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/AddProjectAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/AddProjectDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/AddProjectDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/AddProjectNoRightsToChangeDataExceptionFault", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.Project AddProject(CFAP.DataProviderClient.Project newProject, CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddProject", ReplyAction="http://tempuri.org/IDataProvider/AddProjectResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Project> AddProjectAsync(CFAP.DataProviderClient.Project newProject, CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateProject", ReplyAction="http://tempuri.org/IDataProvider/UpdateProjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/UpdateProjectAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/UpdateProjectDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/UpdateProjectDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/UpdateProjectNoRightsToChangeDataExceptionFault", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.TryChangeReadOnlyFiledException), Action="http://tempuri.org/IDataProvider/UpdateProjectTryChangeReadOnlyFiledExceptionFaul" +
            "t", Name="TryChangeReadOnlyFiledException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfProjectdxjYbbDT), Action="http://tempuri.org/IDataProvider/UpdateProjectConcurrencyExceptionOf_ProjectFault" +
            "", Name="ConcurrencyExceptionOfProjectdxjYbbDT", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.Project UpdateProject(CFAP.DataProviderClient.Project projectToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateProject", ReplyAction="http://tempuri.org/IDataProvider/UpdateProjectResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Project> UpdateProjectAsync(CFAP.DataProviderClient.Project projectToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetBudgetItems", ReplyAction="http://tempuri.org/IDataProvider/GetBudgetItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/GetBudgetItemsAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/GetBudgetItemsDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        CFAP.DataProviderClient.BudgetItem[] GetBudgetItems(CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetBudgetItems", ReplyAction="http://tempuri.org/IDataProvider/GetBudgetItemsResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.BudgetItem[]> GetBudgetItemsAsync(CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddBudgetItem", ReplyAction="http://tempuri.org/IDataProvider/AddBudgetItemResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/AddBudgetItemAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/AddBudgetItemDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/AddBudgetItemDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/AddBudgetItemNoRightsToChangeDataExceptionFault", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.BudgetItem AddBudgetItem(CFAP.DataProviderClient.BudgetItem newBudgetItem, CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddBudgetItem", ReplyAction="http://tempuri.org/IDataProvider/AddBudgetItemResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.BudgetItem> AddBudgetItemAsync(CFAP.DataProviderClient.BudgetItem newBudgetItem, CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateBudgetItem", ReplyAction="http://tempuri.org/IDataProvider/UpdateBudgetItemResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/UpdateBudgetItemAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/UpdateBudgetItemDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/UpdateBudgetItemDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/UpdateBudgetItemNoRightsToChangeDataExceptionFau" +
            "lt", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.TryChangeReadOnlyFiledException), Action="http://tempuri.org/IDataProvider/UpdateBudgetItemTryChangeReadOnlyFiledExceptionF" +
            "ault", Name="TryChangeReadOnlyFiledException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfBudgetItemdxjYbbDT), Action="http://tempuri.org/IDataProvider/UpdateBudgetItemConcurrencyExceptionOf_BudgetIte" +
            "mFault", Name="ConcurrencyExceptionOfBudgetItemdxjYbbDT", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.BudgetItem UpdateBudgetItem(CFAP.DataProviderClient.BudgetItem budgetItemToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateBudgetItem", ReplyAction="http://tempuri.org/IDataProvider/UpdateBudgetItemResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.BudgetItem> UpdateBudgetItemAsync(CFAP.DataProviderClient.BudgetItem budgetItemToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetRates", ReplyAction="http://tempuri.org/IDataProvider/GetRatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/GetRatesAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/GetRatesDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        CFAP.DataProviderClient.Rate[] GetRates(CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/GetRates", ReplyAction="http://tempuri.org/IDataProvider/GetRatesResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Rate[]> GetRatesAsync(CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddRate", ReplyAction="http://tempuri.org/IDataProvider/AddRateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/AddRateAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/AddRateDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/AddRateDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/AddRateNoRightsToChangeDataExceptionFault", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.Rate AddRate(CFAP.DataProviderClient.Rate newRate, CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/AddRate", ReplyAction="http://tempuri.org/IDataProvider/AddRateResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Rate> AddRateAsync(CFAP.DataProviderClient.Rate newRate, CFAP.DataProviderClient.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateRate", ReplyAction="http://tempuri.org/IDataProvider/UpdateRateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/UpdateRateAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/UpdateRateDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/UpdateRateDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/UpdateRateNoRightsToChangeDataExceptionFault", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.TryChangeReadOnlyFiledException), Action="http://tempuri.org/IDataProvider/UpdateRateTryChangeReadOnlyFiledExceptionFault", Name="TryChangeReadOnlyFiledException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfRatedxjYbbDT), Action="http://tempuri.org/IDataProvider/UpdateRateConcurrencyExceptionOf_RateFault", Name="ConcurrencyExceptionOfRatedxjYbbDT", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        CFAP.DataProviderClient.Rate UpdateRate(CFAP.DataProviderClient.Rate rateToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/UpdateRate", ReplyAction="http://tempuri.org/IDataProvider/UpdateRateResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Rate> UpdateRateAsync(CFAP.DataProviderClient.Rate rateToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/MakeOperation", ReplyAction="http://tempuri.org/IDataProvider/MakeOperationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException), Action="http://tempuri.org/IDataProvider/MakeOperationAuthenticateFaultExceptionFault", Name="AuthenticateFaultException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DataNotValidException), Action="http://tempuri.org/IDataProvider/MakeOperationDataNotValidExceptionFault", Name="DataNotValidException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException), Action="http://tempuri.org/IDataProvider/MakeOperationNoRightsToChangeDataExceptionFault", Name="NoRightsToChangeDataException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(CFAP.DataProviderClient.DbException), Action="http://tempuri.org/IDataProvider/MakeOperationDbExceptionFault", Name="DbException", Namespace="http://schemas.datacontract.org/2004/07/CFAPDataModel.Models.Exceptions")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.Transport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.Filter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.DbConcurencyUpdateOptions))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.CrudOperation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentNullException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ArgumentException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.SystemException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.InvalidOperationException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.Accountable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.UserGroup[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.UserGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.User[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.Summary))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.BudgetItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.Project))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.Accountable[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.BudgetItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.Project[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.Summary[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.Balance))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.Rate[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.Rate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.Period))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.DbException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.AuthenticateFaultException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.NoRightsToChangeDataException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.DataNotValidException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.UserHasNotGroupsException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.AccountableUserHasNotAccountableRefferenceException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.PeriodIsLockedException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.TryChangeReadOnlyFiledException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.FiledDeletedException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfSummarydxjYbbDT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfAccountabledxjYbbDT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfProjectdxjYbbDT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfBudgetItemdxjYbbDT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CFAP.DataProviderClient.ConcurrencyExceptionOfRatedxjYbbDT))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        CFAP.DataProviderClient.Transport MakeOperation(object entity, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOptions, CFAP.DataProviderClient.CrudOperation operation, CFAP.DataProviderClient.Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProvider/MakeOperation", ReplyAction="http://tempuri.org/IDataProvider/MakeOperationResponse")]
        System.Threading.Tasks.Task<CFAP.DataProviderClient.Transport> MakeOperationAsync(object entity, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOptions, CFAP.DataProviderClient.CrudOperation operation, CFAP.DataProviderClient.Filter filter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataProviderChannel : CFAP.DataProviderClient.IDataProvider, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataProviderClient : System.ServiceModel.ClientBase<CFAP.DataProviderClient.IDataProvider>, CFAP.DataProviderClient.IDataProvider {
        
        public DataProviderClient() {
        }
        
        public DataProviderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataProviderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataProviderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataProviderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetLogins() {
            return base.Channel.GetLogins();
        }
        
        public System.Threading.Tasks.Task<string[]> GetLoginsAsync() {
            return base.Channel.GetLoginsAsync();
        }
        
        public CFAP.DataProviderClient.User Authenticate(CFAP.DataProviderClient.User user) {
            return base.Channel.Authenticate(user);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.User> AuthenticateAsync(CFAP.DataProviderClient.User user) {
            return base.Channel.AuthenticateAsync(user);
        }
        
        public CFAP.DataProviderClient.User AddNewUser(CFAP.DataProviderClient.User newUser, CFAP.DataProviderClient.User owner) {
            return base.Channel.AddNewUser(newUser, owner);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.User> AddNewUserAsync(CFAP.DataProviderClient.User newUser, CFAP.DataProviderClient.User owner) {
            return base.Channel.AddNewUserAsync(newUser, owner);
        }
        
        public CFAP.DataProviderClient.User[] GetUsers(CFAP.DataProviderClient.User owner) {
            return base.Channel.GetUsers(owner);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.User[]> GetUsersAsync(CFAP.DataProviderClient.User owner) {
            return base.Channel.GetUsersAsync(owner);
        }
        
        public CFAP.DataProviderClient.User UpdateUser(CFAP.DataProviderClient.User userForUpdate, CFAP.DataProviderClient.User owner) {
            return base.Channel.UpdateUser(userForUpdate, owner);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.User> UpdateUserAsync(CFAP.DataProviderClient.User userForUpdate, CFAP.DataProviderClient.User owner) {
            return base.Channel.UpdateUserAsync(userForUpdate, owner);
        }
        
        public CFAP.DataProviderClient.UserGroup[] GetUserGroups(CFAP.DataProviderClient.User owner) {
            return base.Channel.GetUserGroups(owner);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.UserGroup[]> GetUserGroupsAsync(CFAP.DataProviderClient.User owner) {
            return base.Channel.GetUserGroupsAsync(owner);
        }
        
        public CFAP.DataProviderClient.UserGroup AddNewUserGroup(CFAP.DataProviderClient.UserGroup newUserGroup, CFAP.DataProviderClient.User owner) {
            return base.Channel.AddNewUserGroup(newUserGroup, owner);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.UserGroup> AddNewUserGroupAsync(CFAP.DataProviderClient.UserGroup newUserGroup, CFAP.DataProviderClient.User owner) {
            return base.Channel.AddNewUserGroupAsync(newUserGroup, owner);
        }
        
        public CFAP.DataProviderClient.UserGroup UpdateUserGroup(CFAP.DataProviderClient.UserGroup userGroupForUpdate, CFAP.DataProviderClient.User owner) {
            return base.Channel.UpdateUserGroup(userGroupForUpdate, owner);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.UserGroup> UpdateUserGroupAsync(CFAP.DataProviderClient.UserGroup userGroupForUpdate, CFAP.DataProviderClient.User owner) {
            return base.Channel.UpdateUserGroupAsync(userGroupForUpdate, owner);
        }
        
        public CFAP.DataProviderClient.Summary AddSummary(CFAP.DataProviderClient.Summary summary, CFAP.DataProviderClient.User user) {
            return base.Channel.AddSummary(summary, user);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Summary> AddSummaryAsync(CFAP.DataProviderClient.Summary summary, CFAP.DataProviderClient.User user) {
            return base.Channel.AddSummaryAsync(summary, user);
        }
        
        public CFAP.DataProviderClient.Summary[] GetSummary(CFAP.DataProviderClient.User user, CFAP.DataProviderClient.Filter filter) {
            return base.Channel.GetSummary(user, filter);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Summary[]> GetSummaryAsync(CFAP.DataProviderClient.User user, CFAP.DataProviderClient.Filter filter) {
            return base.Channel.GetSummaryAsync(user, filter);
        }
        
        public CFAP.DataProviderClient.Balance GetBalanceBeginningPeriod(CFAP.DataProviderClient.User user, CFAP.DataProviderClient.Filter filter) {
            return base.Channel.GetBalanceBeginningPeriod(user, filter);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Balance> GetBalanceBeginningPeriodAsync(CFAP.DataProviderClient.User user, CFAP.DataProviderClient.Filter filter) {
            return base.Channel.GetBalanceBeginningPeriodAsync(user, filter);
        }
        
        public CFAP.DataProviderClient.Summary UpdateSummary(CFAP.DataProviderClient.Summary summary, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOptions) {
            return base.Channel.UpdateSummary(summary, user, concurencyUpdateOptions);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Summary> UpdateSummaryAsync(CFAP.DataProviderClient.Summary summary, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOptions) {
            return base.Channel.UpdateSummaryAsync(summary, user, concurencyUpdateOptions);
        }
        
        public void ChangeSummaryReadOnlyStatus(bool onOff, CFAP.DataProviderClient.Filter filter, CFAP.DataProviderClient.User user) {
            base.Channel.ChangeSummaryReadOnlyStatus(onOff, filter, user);
        }
        
        public System.Threading.Tasks.Task ChangeSummaryReadOnlyStatusAsync(bool onOff, CFAP.DataProviderClient.Filter filter, CFAP.DataProviderClient.User user) {
            return base.Channel.ChangeSummaryReadOnlyStatusAsync(onOff, filter, user);
        }
        
        public CFAP.DataProviderClient.Summary RemoveSummary(CFAP.DataProviderClient.Summary summary, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOptions) {
            return base.Channel.RemoveSummary(summary, user, concurencyUpdateOptions);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Summary> RemoveSummaryAsync(CFAP.DataProviderClient.Summary summary, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOptions) {
            return base.Channel.RemoveSummaryAsync(summary, user, concurencyUpdateOptions);
        }
        
        public CFAP.DataProviderClient.Accountable[] GetAccountables(CFAP.DataProviderClient.User user) {
            return base.Channel.GetAccountables(user);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Accountable[]> GetAccountablesAsync(CFAP.DataProviderClient.User user) {
            return base.Channel.GetAccountablesAsync(user);
        }
        
        public CFAP.DataProviderClient.Accountable AddAccountable(CFAP.DataProviderClient.Accountable newAccountable, CFAP.DataProviderClient.User user) {
            return base.Channel.AddAccountable(newAccountable, user);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Accountable> AddAccountableAsync(CFAP.DataProviderClient.Accountable newAccountable, CFAP.DataProviderClient.User user) {
            return base.Channel.AddAccountableAsync(newAccountable, user);
        }
        
        public CFAP.DataProviderClient.Accountable UpdateAccountable(CFAP.DataProviderClient.Accountable accountableToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption) {
            return base.Channel.UpdateAccountable(accountableToUpdate, user, concurencyUpdateOption);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Accountable> UpdateAccountableAsync(CFAP.DataProviderClient.Accountable accountableToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption) {
            return base.Channel.UpdateAccountableAsync(accountableToUpdate, user, concurencyUpdateOption);
        }
        
        public CFAP.DataProviderClient.Project[] GetProjects(CFAP.DataProviderClient.User user) {
            return base.Channel.GetProjects(user);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Project[]> GetProjectsAsync(CFAP.DataProviderClient.User user) {
            return base.Channel.GetProjectsAsync(user);
        }
        
        public CFAP.DataProviderClient.Project AddProject(CFAP.DataProviderClient.Project newProject, CFAP.DataProviderClient.User user) {
            return base.Channel.AddProject(newProject, user);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Project> AddProjectAsync(CFAP.DataProviderClient.Project newProject, CFAP.DataProviderClient.User user) {
            return base.Channel.AddProjectAsync(newProject, user);
        }
        
        public CFAP.DataProviderClient.Project UpdateProject(CFAP.DataProviderClient.Project projectToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption) {
            return base.Channel.UpdateProject(projectToUpdate, user, concurencyUpdateOption);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Project> UpdateProjectAsync(CFAP.DataProviderClient.Project projectToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption) {
            return base.Channel.UpdateProjectAsync(projectToUpdate, user, concurencyUpdateOption);
        }
        
        public CFAP.DataProviderClient.BudgetItem[] GetBudgetItems(CFAP.DataProviderClient.User user) {
            return base.Channel.GetBudgetItems(user);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.BudgetItem[]> GetBudgetItemsAsync(CFAP.DataProviderClient.User user) {
            return base.Channel.GetBudgetItemsAsync(user);
        }
        
        public CFAP.DataProviderClient.BudgetItem AddBudgetItem(CFAP.DataProviderClient.BudgetItem newBudgetItem, CFAP.DataProviderClient.User user) {
            return base.Channel.AddBudgetItem(newBudgetItem, user);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.BudgetItem> AddBudgetItemAsync(CFAP.DataProviderClient.BudgetItem newBudgetItem, CFAP.DataProviderClient.User user) {
            return base.Channel.AddBudgetItemAsync(newBudgetItem, user);
        }
        
        public CFAP.DataProviderClient.BudgetItem UpdateBudgetItem(CFAP.DataProviderClient.BudgetItem budgetItemToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption) {
            return base.Channel.UpdateBudgetItem(budgetItemToUpdate, user, concurencyUpdateOption);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.BudgetItem> UpdateBudgetItemAsync(CFAP.DataProviderClient.BudgetItem budgetItemToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption) {
            return base.Channel.UpdateBudgetItemAsync(budgetItemToUpdate, user, concurencyUpdateOption);
        }
        
        public CFAP.DataProviderClient.Rate[] GetRates(CFAP.DataProviderClient.User user) {
            return base.Channel.GetRates(user);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Rate[]> GetRatesAsync(CFAP.DataProviderClient.User user) {
            return base.Channel.GetRatesAsync(user);
        }
        
        public CFAP.DataProviderClient.Rate AddRate(CFAP.DataProviderClient.Rate newRate, CFAP.DataProviderClient.User user) {
            return base.Channel.AddRate(newRate, user);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Rate> AddRateAsync(CFAP.DataProviderClient.Rate newRate, CFAP.DataProviderClient.User user) {
            return base.Channel.AddRateAsync(newRate, user);
        }
        
        public CFAP.DataProviderClient.Rate UpdateRate(CFAP.DataProviderClient.Rate rateToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption) {
            return base.Channel.UpdateRate(rateToUpdate, user, concurencyUpdateOption);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Rate> UpdateRateAsync(CFAP.DataProviderClient.Rate rateToUpdate, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOption) {
            return base.Channel.UpdateRateAsync(rateToUpdate, user, concurencyUpdateOption);
        }
        
        public CFAP.DataProviderClient.Transport MakeOperation(object entity, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOptions, CFAP.DataProviderClient.CrudOperation operation, CFAP.DataProviderClient.Filter filter) {
            return base.Channel.MakeOperation(entity, user, concurencyUpdateOptions, operation, filter);
        }
        
        public System.Threading.Tasks.Task<CFAP.DataProviderClient.Transport> MakeOperationAsync(object entity, CFAP.DataProviderClient.User user, CFAP.DataProviderClient.DbConcurencyUpdateOptions concurencyUpdateOptions, CFAP.DataProviderClient.CrudOperation operation, CFAP.DataProviderClient.Filter filter) {
            return base.Channel.MakeOperationAsync(entity, user, concurencyUpdateOptions, operation, filter);
        }
    }
}
